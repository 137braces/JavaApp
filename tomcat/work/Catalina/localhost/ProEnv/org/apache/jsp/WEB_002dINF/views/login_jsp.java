/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.13
 * Generated at: 2023-09-27 11:46:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html\" charset=\"UTF-8\">\n");
      out.write("        <title>Java - paiza</title>\n");
      out.write("        <style>body {padding: 30px;}</style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("\n");
      out.write("        <form method=\"get\" action=\"user\">\n");
      out.write("            <input type=\"submit\" value=\"GETで送信\">\n");
      out.write("        </form>\n");
      out.write("\n");
      out.write("        <form method=\"post\" action=\"user\">\n");
      out.write("            <h1>Times Square</h1>\n");
      out.write("            <input type=\"text\" name=\"email\" placeholder=\"Email\"/>\n");
      out.write("            <input type=\"password\" name=\"password\" placeholder=\"Password\"/>\n");
      out.write("            <button type=\"submit\">Login</button>\n");
      out.write("        </form>\n");
      out.write("\n");
      out.write("        <p style=\"text-align: center; font-size:20px;\"><a style=\"text-decoration:none;\" href=\"signup\">新規登録はこちら</a></p>\n");
      out.write("  \n");
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script src=\"https://unpkg.com/vue@2.6.14/dist/vue.min.js\"></script>\n");
      out.write("<script>\n");
      out.write("  new Vue({\n");
      out.write("    el:\"#app\",\n");
      out.write("    /* Vue.jsの各種処理 */\n");
      out.write("  })\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("a{\n");
      out.write("    color: #403e3e;\n");
      out.write("}\n");
      out.write("\n");
      out.write("a:hover{\n");
      out.write("    color: #4287f5;\n");
      out.write("}\n");
      out.write("\n");
      out.write("@text: #111;\n");
      out.write("@base: #f4f4f4;\n");
      out.write("@link: #2a3644;\n");
      out.write("@button: #f26964;\n");
      out.write("@bottom: #ab4b47;\n");
      out.write("\n");
      out.write(".rounded (@radius: 6px) {\n");
      out.write("  -webkit-border-radius: @radius;\n");
      out.write("     -moz-border-radius: @radius;\n");
      out.write("      -ms-border-radius: @radius;\n");
      out.write("       -o-border-radius: @radius;\n");
      out.write("          border-radius: @radius;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".trans (@transition: .1s) {\n");
      out.write("  -webkit-transition: all @transition ease-in-out;\n");
      out.write("     -moz-transition: all @transition ease-in-out;\n");
      out.write("          transition: all @transition ease-in-out;\n");
      out.write(" \n");
      out.write("}\n");
      out.write("\n");
      out.write("* {\n");
      out.write("  margin:0;\n");
      out.write("  padding:0;\n");
      out.write("  border:none;\n");
      out.write("  list-style:none;\n");
      out.write("  -webkit-box-sizing: border-box;\n");
      out.write("     -moz-box-sizing: border-box;\n");
      out.write("          box-sizing: border-box;\n");
      out.write("}\n");
      out.write("\n");
      out.write("body {\n");
      out.write("  font:15px/1.25 'Alef';\n");
      out.write("  color:@text;\n");
      out.write("}\n");
      out.write("\n");
      out.write("form {\n");
      out.write("  margin:20px auto;\n");
      out.write("  background:#2a2b2b;\n");
      out.write("  width:347px;\n");
      out.write("  text-align:center;\n");
      out.write("  padding:40px;\n");
      out.write("  .rounded;\n");
      out.write("}\n");
      out.write("\n");
      out.write("form > h1 {\n");
      out.write("  color:white;\n");
      out.write("  text-shadow:1px 1px 0px rgba(0, 0, 0, 0.7);\n");
      out.write("  font-weight:400;\n");
      out.write("  margin-bottom:20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("input {\n");
      out.write("  background:rgba(0, 0, 0, 0.2);\n");
      out.write("  color:#fff;\n");
      out.write("  text-shadow:1px 1px 0px rgba(0, 0, 0,0.3);\n");
      out.write("  display:block;\n");
      out.write("  width:269px;\n");
      out.write("  padding:15px;\n");
      out.write("  margin-bottom:10px;\n");
      out.write("  .rounded;\n");
      out.write("  .trans;\n");
      out.write("  outline:none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("input:focus {\n");
      out.write("  background:rgba(0, 0, 0, 0.1);\n");
      out.write("  .trans;\n");
      out.write("}\n");
      out.write("\n");
      out.write("::-webkit-input-placeholder {\n");
      out.write("   color: rgba(225, 225, 225, 0.4);\n");
      out.write("}\n");
      out.write("\n");
      out.write(":-moz-placeholder {\n");
      out.write("   color: rgba(225, 225, 225, 0.4); \n");
      out.write("}\n");
      out.write("\n");
      out.write("::-moz-placeholder {\n");
      out.write("   color: rgba(225, 225, 225, 0.4);\n");
      out.write("}\n");
      out.write("\n");
      out.write(":-ms-input-placeholder {  \n");
      out.write("   color: rgba(225, 225, 225, 0.4);\n");
      out.write("}\n");
      out.write("\n");
      out.write("button {\n");
      out.write("  position:relative;\n");
      out.write("  display:block;\n");
      out.write("  margin-top:15px;\n");
      out.write("  margin-bottom:15px;\n");
      out.write("  padding:17px;\n");
      out.write("  width:270px;\n");
      out.write("  .rounded;\n");
      out.write("  .trans;\n");
      out.write("  font-size:1.2em;\n");
      out.write("  background:@button;\n");
      out.write("  color:@base;\n");
      out.write("  box-shadow:0px 3px 0px @bottom;\n");
      out.write("  cursor:pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write("button:active {\n");
      out.write("  top:3px;\n");
      out.write("  box-shadow:none;\n");
      out.write("}\n");
      out.write("</style>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
